package pieces;

import java.util.ArrayList;
import java.util.Arrays;

import chess.Board;
import chess.Color;
import chess.Location;

public class King extends Piece {
	
	public King(int x, int y, Color team) {
		super(x, y, team);
		rank = "K";
	}
	
	public ArrayList<ArrayList<Location>> validMoves() {
		ArrayList<ArrayList<Location>> moves = new ArrayList<ArrayList<Location>>();
		for (int i = 0; i <= Board.NWEST; i++) moves.add(new ArrayList<Location>());
		
		if (!hasMoved) {
			moves.add(Arrays.asList(0, y));
			moves.add(Arrays.asList(Board.WIDTH, y));
		}
		if (x - 1 >= 0) {
			moves.add(Arrays.asList(x - 1, y));
			if (y + 1 < Board.HEIGHT) moves.add(Arrays.asList(x - 1, y + 1));
			if (y - 1 >= 0) moves.add(Arrays.asList(x - 1, y - 1));
		}
		if (y + 1 < Board.HEIGHT) moves.add(Arrays.asList(x, y + 1));
		if (y - 1 >= 0) moves.add(Arrays.asList(x, y - 1));
		if (x + 1 < Board.WIDTH) {
			moves.add(Arrays.asList(x + 1, y));
			if (y + 1 < Board.HEIGHT) moves.add(Arrays.asList(x + 1, y + 1));
			if (y - 1 >= 0) moves.add(Arrays.asList(x + 1, y - 1));
		}
		
		return moves;
	}

}
